<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="21" passed="20" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-06-02T21:02:31 IST" name="Suite" finished-at="2021-06-02T21:03:12 IST" duration-ms="40909">
    <groups>
    </groups>
    <test started-at="2021-06-02T21:02:31 IST" name="Test" finished-at="2021-06-02T21:03:12 IST" duration-ms="40909">
      <class name="QueueCodes.RegisterUser">
        <test-method is-config="true" signature="initialize()[pri:0, instance:QueueCodes.RegisterUser@41e350f1]" started-at="2021-06-02T21:03:00 IST" name="initialize" finished-at="2021-06-02T21:03:08 IST" duration-ms="7376" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method is-config="true" signature="cleanData()[pri:0, instance:QueueCodes.RegisterUser@41e350f1]" started-at="2021-06-02T21:03:08 IST" name="cleanData" finished-at="2021-06-02T21:03:08 IST" duration-ms="250" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanData -->
        <test-method signature="registerUser(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:QueueCodes.RegisterUser@41e350f1]" started-at="2021-06-02T21:03:08 IST" name="registerUser" data-provider="getData" finished-at="2021-06-02T21:03:08 IST" duration-ms="378" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sandeep]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10203040]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sandeep@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerUser -->
        <test-method is-config="true" signature="cleanData()[pri:0, instance:QueueCodes.RegisterUser@41e350f1]" started-at="2021-06-02T21:03:08 IST" name="cleanData" finished-at="2021-06-02T21:03:09 IST" duration-ms="558" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanData -->
        <test-method signature="registerUser(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:QueueCodes.RegisterUser@41e350f1]" started-at="2021-06-02T21:03:09 IST" name="registerUser" data-provider="getData" finished-at="2021-06-02T21:03:09 IST" duration-ms="298" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sandeep]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10203040]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerUser -->
        <test-method is-config="true" signature="cleanData()[pri:0, instance:QueueCodes.RegisterUser@41e350f1]" started-at="2021-06-02T21:03:09 IST" name="cleanData" finished-at="2021-06-02T21:03:09 IST" duration-ms="185" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanData -->
        <test-method signature="registerUser(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:QueueCodes.RegisterUser@41e350f1]" started-at="2021-06-02T21:03:09 IST" name="registerUser" data-provider="getData" finished-at="2021-06-02T21:03:10 IST" duration-ms="295" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sandeep]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sandeep@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerUser -->
        <test-method is-config="true" signature="cleanData()[pri:0, instance:QueueCodes.RegisterUser@41e350f1]" started-at="2021-06-02T21:03:10 IST" name="cleanData" finished-at="2021-06-02T21:03:10 IST" duration-ms="168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanData -->
        <test-method signature="registerUser(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:QueueCodes.RegisterUser@41e350f1]" started-at="2021-06-02T21:03:10 IST" name="registerUser" data-provider="getData" finished-at="2021-06-02T21:03:10 IST" duration-ms="297" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10203040]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sandeep@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerUser -->
        <test-method is-config="true" signature="cleanData()[pri:0, instance:QueueCodes.RegisterUser@41e350f1]" started-at="2021-06-02T21:03:10 IST" name="cleanData" finished-at="2021-06-02T21:03:10 IST" duration-ms="170" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanData -->
        <test-method signature="registerUser(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:QueueCodes.RegisterUser@41e350f1]" started-at="2021-06-02T21:03:10 IST" name="registerUser" data-provider="getData" finished-at="2021-06-02T21:03:10 IST" duration-ms="278" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sandeep]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11345]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerUser -->
        <test-method is-config="true" signature="cleanData()[pri:0, instance:QueueCodes.RegisterUser@41e350f1]" started-at="2021-06-02T21:03:10 IST" name="cleanData" finished-at="2021-06-02T21:03:11 IST" duration-ms="158" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanData -->
        <test-method signature="registerUser(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:QueueCodes.RegisterUser@41e350f1]" started-at="2021-06-02T21:03:11 IST" name="registerUser" data-provider="getData" finished-at="2021-06-02T21:03:11 IST" duration-ms="280" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Sandeep]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerUser -->
        <test-method is-config="true" signature="cleanData()[pri:0, instance:QueueCodes.RegisterUser@41e350f1]" started-at="2021-06-02T21:03:11 IST" name="cleanData" finished-at="2021-06-02T21:03:11 IST" duration-ms="154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanData -->
        <test-method signature="registerUser(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:QueueCodes.RegisterUser@41e350f1]" started-at="2021-06-02T21:03:11 IST" name="registerUser" data-provider="getData" finished-at="2021-06-02T21:03:11 IST" duration-ms="263" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[10203040]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerUser -->
        <test-method is-config="true" signature="cleanData()[pri:0, instance:QueueCodes.RegisterUser@41e350f1]" started-at="2021-06-02T21:03:11 IST" name="cleanData" finished-at="2021-06-02T21:03:11 IST" duration-ms="183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanData -->
        <test-method signature="registerUser(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:QueueCodes.RegisterUser@41e350f1]" started-at="2021-06-02T21:03:11 IST" name="registerUser" data-provider="getData" finished-at="2021-06-02T21:03:12 IST" duration-ms="277" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sandeep@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerUser -->
        <test-method is-config="true" signature="cleanData()[pri:0, instance:QueueCodes.RegisterUser@41e350f1]" started-at="2021-06-02T21:03:12 IST" name="cleanData" finished-at="2021-06-02T21:03:12 IST" duration-ms="140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanData -->
        <test-method signature="registerUser(java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:QueueCodes.RegisterUser@41e350f1]" started-at="2021-06-02T21:03:12 IST" name="registerUser" data-provider="getData" finished-at="2021-06-02T21:03:12 IST" duration-ms="284" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[sandeep@gmail.com]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerUser -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:QueueCodes.RegisterUser@41e350f1]" started-at="2021-06-02T21:03:12 IST" name="tearDown" finished-at="2021-06-02T21:03:12 IST" duration-ms="212" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- QueueCodes.RegisterUser -->
      <class name="QueueCodes.Users">
        <test-method is-config="true" signature="initialize()[pri:0, instance:QueueCodes.Users@14b030a0]" started-at="2021-06-02T21:02:49 IST" name="initialize" finished-at="2021-06-02T21:02:56 IST" duration-ms="6564" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="usersInHome()[pri:0, instance:QueueCodes.Users@14b030a0]" started-at="2021-06-02T21:02:56 IST" name="usersInHome" finished-at="2021-06-02T21:03:00 IST" duration-ms="3539" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- usersInHome -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:QueueCodes.Users@14b030a0]" started-at="2021-06-02T21:03:00 IST" name="tearDown" finished-at="2021-06-02T21:03:00 IST" duration-ms="619" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- QueueCodes.Users -->
      <class name="QueueCodes.LoginPageTest">
        <test-method is-config="true" signature="initilize()[pri:0, instance:QueueCodes.LoginPageTest@5f031ebd]" started-at="2021-06-02T21:02:31 IST" name="initilize" finished-at="2021-06-02T21:02:35 IST" duration-ms="3682" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initilize -->
        <test-method signature="basePageNavigation(java.lang.String, java.lang.String)[pri:0, instance:QueueCodes.LoginPageTest@5f031ebd]" started-at="2021-06-02T21:02:35 IST" name="basePageNavigation" data-provider="getData" finished-at="2021-06-02T21:02:40 IST" duration-ms="4992" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[qu]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method signature="basePageNavigation(java.lang.String, java.lang.String)[pri:0, instance:QueueCodes.LoginPageTest@5f031ebd]" started-at="2021-06-02T21:02:40 IST" name="basePageNavigation" data-provider="getData" finished-at="2021-06-02T21:02:41 IST" duration-ms="496" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[queuecodes@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1235]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method signature="basePageNavigation(java.lang.String, java.lang.String)[pri:0, instance:QueueCodes.LoginPageTest@5f031ebd]" started-at="2021-06-02T21:02:41 IST" name="basePageNavigation" data-provider="getData" finished-at="2021-06-02T21:02:41 IST" duration-ms="566" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[queuue@gamil.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method signature="basePageNavigation(java.lang.String, java.lang.String)[pri:0, instance:QueueCodes.LoginPageTest@5f031ebd]" started-at="2021-06-02T21:02:41 IST" name="basePageNavigation" data-provider="getData" finished-at="2021-06-02T21:02:42 IST" duration-ms="390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method signature="basePageNavigation(java.lang.String, java.lang.String)[pri:0, instance:QueueCodes.LoginPageTest@5f031ebd]" started-at="2021-06-02T21:02:42 IST" name="basePageNavigation" data-provider="getData" finished-at="2021-06-02T21:02:42 IST" duration-ms="380" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[queuecodes@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method signature="basePageNavigation(java.lang.String, java.lang.String)[pri:0, instance:QueueCodes.LoginPageTest@5f031ebd]" started-at="2021-06-02T21:02:42 IST" name="basePageNavigation" data-provider="getData" finished-at="2021-06-02T21:02:43 IST" duration-ms="818" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method signature="basePageNavigation(java.lang.String, java.lang.String)[pri:0, instance:QueueCodes.LoginPageTest@5f031ebd]" started-at="2021-06-02T21:02:43 IST" name="basePageNavigation" data-provider="getData" finished-at="2021-06-02T21:02:44 IST" duration-ms="909" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[queuecodes@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method is-config="true" signature="teardown()[pri:0, instance:QueueCodes.LoginPageTest@5f031ebd]" started-at="2021-06-02T21:02:44 IST" name="teardown" finished-at="2021-06-02T21:02:47 IST" duration-ms="3191" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- QueueCodes.LoginPageTest -->
      <class name="QueueCodes.ScenarioDashboard">
        <test-method is-config="true" signature="initialize()[pri:0, instance:QueueCodes.ScenarioDashboard@53812a9b]" started-at="2021-06-02T21:02:47 IST" name="initialize" finished-at="2021-06-02T21:02:55 IST" duration-ms="7756" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="Scenario()[pri:0, instance:QueueCodes.ScenarioDashboard@53812a9b]" started-at="2021-06-02T21:02:55 IST" name="Scenario" finished-at="2021-06-02T21:03:00 IST" duration-ms="5329" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Scenario -->
        <test-method signature="clickMe()[pri:0, instance:QueueCodes.ScenarioDashboard@53812a9b]" started-at="2021-06-02T21:03:00 IST" name="clickMe" finished-at="2021-06-02T21:03:06 IST" duration-ms="5663" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickMe -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:QueueCodes.ScenarioDashboard@53812a9b]" started-at="2021-06-02T21:03:06 IST" name="tearDown" finished-at="2021-06-02T21:03:07 IST" duration-ms="1547" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- QueueCodes.ScenarioDashboard -->
      <class name="QueueCodes.HPTextValidation">
        <test-method is-config="true" signature="initialize()[pri:0, instance:QueueCodes.HPTextValidation@45c8d09f]" started-at="2021-06-02T21:02:41 IST" name="initialize" finished-at="2021-06-02T21:02:48 IST" duration-ms="6845" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="textValidation()[pri:0, instance:QueueCodes.HPTextValidation@45c8d09f]" started-at="2021-06-02T21:02:48 IST" name="textValidation" finished-at="2021-06-02T21:02:48 IST" duration-ms="52" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [QueueCodes123] but found [QueueCodes]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [QueueCodes123] but found [QueueCodes]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.assertEqualsImpl(Assert.java:136)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:575)
at org.testng.Assert.assertEquals(Assert.java:585)
at QueueCodes.HPTextValidation.textValidation(HPTextValidation.java:33)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:832)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- textValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:QueueCodes.HPTextValidation@45c8d09f]" started-at="2021-06-02T21:02:48 IST" name="tearDown" finished-at="2021-06-02T21:02:49 IST" duration-ms="1172" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- QueueCodes.HPTextValidation -->
      <class name="QueueCodes.HPTitleValidaton">
        <test-method is-config="true" signature="initialize()[pri:0, instance:QueueCodes.HPTitleValidaton@4ee37ca3]" started-at="2021-06-02T21:02:31 IST" name="initialize" finished-at="2021-06-02T21:02:41 IST" duration-ms="9371" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialize -->
        <test-method signature="titleValidation()[pri:0, instance:QueueCodes.HPTitleValidaton@4ee37ca3]" started-at="2021-06-02T21:02:41 IST" name="titleValidation" finished-at="2021-06-02T21:02:41 IST" duration-ms="27" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- titleValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:QueueCodes.HPTitleValidaton@4ee37ca3]" started-at="2021-06-02T21:02:41 IST" name="tearDown" finished-at="2021-06-02T21:02:41 IST" duration-ms="456" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- QueueCodes.HPTitleValidaton -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
